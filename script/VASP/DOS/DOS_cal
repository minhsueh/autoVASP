####total DOS
#num=$(cat DOSCAR|sed -n '6p'| awk '{print $3}')
#echo $num

spin=$(cat ../system_imfo|awk '{print $7}')

num=100000 #NEDOS
mkdir DOS
cat DOSCAR|sed -n "7,$(($num+6))p" > total_DOS1

#cat total_DOS1|awk '{print $2"  "$1}' >>total_DOS_pre


fermi=$(cat OUTCAR|grep E-fermi| awk '{print $3}')
cat OUTCAR|grep E-fermi| awk '{print $3}' >>fermi_level
echo "Fermi level = $fermi"

##max & total
if [ $spin -eq 1 ]; then
	cat total_DOS1|awk '{print ($2)}' >>DOS_only
	max=$(awk 'BEGIN {max = 0} {if ($1+0 > max+0) max=$1} END {print max}' DOS_only)
	echo max = $max

	cat total_DOS1|awk '{print ($2/'$max')"  "($1-('$fermi'))}' >>total_DOS
	mv total_DOS DOS
	rm total_DOS1
	rm DOS_only
elif [ $spin -eq 2 ]; then
	cat total_DOS1|awk '{print ($2)}' >>DOS_only_up
	cat total_DOS1|awk '{print ($3)}' >>DOS_only_dn
	max_up=$(awk 'BEGIN {max = 0} {if ($1+0 > max+0) max=$1} END {print max}' DOS_only_up)
	max_dn=$(awk 'BEGIN {max = 0} {if ($1+0 > max+0) max=$1} END {print max}' DOS_only_dn)
	if [ 1 -eq "$(echo "${max_up} < ${max_dn}" | bc )" ]; then
		max=$max_dn
	else
		max=$max_up
	fi
	echo "max_up = ${max_up} ; max_dn = ${max_dn}; max = ${max}"

	cat total_DOS1|awk '{print ($2/'$max')"  "((-1)*$3/'$max')"  "($1-('$fermi'))}' >>total_DOS
	cat total_DOS1|awk '{print (($2-$3)/'$max')"  "($1-('$fermi'))}' >>spin_DOS
	mv total_DOS DOS
	mv spin_DOS DOS
	rm total_DOS1
	rm DOS_only*
fi

#######saperate DOS
num_first_atom=$(cat CONTCAR| sed -n '7p'| cut -d ' '  -f 6)
num_second_atom=$(cat CONTCAR| sed -n '7p'| cut -d ' '  -f 11)
first_atom=$(cat CONTCAR| sed -n '6p'| cut -d ' '  -f 4)
second_atom=$(cat CONTCAR| sed -n '6p'| cut -d ' '  -f 7)
#echo $num_first_atom
if [ -z $num_second_atom ]; then
#	echo "empty~"
	num_total=$num_first_atom
	echo "$first_atom = $num_first_atom"
else
	num_total=$(($num_first_atom+$num_second_atom))
	echo "$first_atom = $num_first_atom; $second_atom = $num_second_atom"
fi


if [ $spin -eq 1 ]; then
	for ((i=1;i<=${num_total};i++))
	do
		
		if [ $i -le $num_first_atom ]; then
			
			echo $i $first_atom
			cat DOSCAR|sed -n "$((7+$i+$i*$num)),$(($num*($i+1)+6+$i))p" > pre_${first_atom}_$i
			cat pre_${first_atom}_$i|awk '{print ($2/'$max')"  "($3/'$max')"  "($4/'$max')"  "(($2+$3+$4)/'$max')"  "($1-('$fermi'))}' >>spd_DOS_${first_atom}_$i
			cat pre_${first_atom}_$i|awk '{print (($2+$3+$4)/'$max')"  "($1-('$fermi'))}' >>total_DOS_${first_atom}_$i
		elif [ $i -gt $num_first_atom ]; then
			echo $i $second_atom
			j=$(($i-$num_first_atom))
			cat DOSCAR|sed -n "$((7+$i+$i*$num)),$(($num*($i+1)+6+$i))p" > pre_${second_atom}_$j
			cat pre_${second_atom}_$j|awk '{print ($2/'$max')"  "($3/'$max')"  "($4/'$max')"  "(($2+$3+$4)/'$max')"  "($1-('$fermi'))}' >>spd_DOS_${second_atom}_$j
			cat pre_${second_atom}_$j|awk '{print (($2+$3+$4)/'$max')"  "($1-('$fermi'))}' >>total_DOS_${second_atom}_$j
		fi
	#	rm pre_$i
	done

	mv total_DOS_* DOS
	mv pre_* DOS
	mv spd_DOS_* DOS
elif [ $spin -eq 2 ]; then
	for ((i=1;i<=${num_total};i++))
	do
		
		if [ $i -le $num_first_atom ]; then
			
			echo $i $first_atom
			cat DOSCAR|sed -n "$((7+$i+$i*$num)),$(($num*($i+1)+6+$i))p" > pre_${first_atom}_$i
			cat pre_${first_atom}_$i|awk '{print ($2/'$max')"  "((-1)*$3/'$max')"  "($4/'$max')"  "((-1)*$5/'$max')"  "($6/'$max')"  "((-1)*$7/'$max')"  "(($2+$4+$6)/'$max')"  "((-1)*($3+$5+$7)/'$max')"  "($1-('$fermi'))}' >>spd_DOS_${first_atom}_$i
			cat pre_${first_atom}_$i|awk '{print (($2+$4+$6)/'$max')"  "((-1)*($3+$5+$7)/'$max')"  "($1-('$fermi'))}' >>total_DOS_${first_atom}_$i
		elif [ $i -gt $num_first_atom ]; then
			echo $i $second_atom
			j=$(($i-$num_first_atom))
			cat DOSCAR|sed -n "$((7+$i+$i*$num)),$(($num*($i+1)+6+$i))p" > pre_${second_atom}_$j
			cat pre_${second_atom}_$j|awk '{print ($2/'$max')"  "((-1)*$3/'$max')"  "($4/'$max')"  "((-1)*$5/'$max')"  "($6/'$max')"  "((-1)*$7/'$max')"  "(($2+$4+$6)/'$max')"  "((-1)*($3+$5+$7)/'$max')"  "($1-('$fermi'))}' >>spd_DOS_${second_atom}_$j
			cat pre_${second_atom}_$j|awk '{print (($2+$4+$6)/'$max')"  "((-1)*($3+$5+$7)/'$max')"  "($1-('$fermi'))}' >>total_DOS_${second_atom}_$j
		fi
	#	rm pre_$i
	done
	mv total_* DOS
	mv pre_* DOS
	mv spd_DOS_* DOS
fi
mv fermi_level DOS